swagger: "2.0"
info:
  title: NetAdmin API
  description: Netadmin has every tool to get any job done, so codename for the new
    netadmin APIs.
  version: 1.0.0
  contact:
    email: zengqi0529@163.com
basePath: /v1.0.0
paths:
  /authority/:
    get:
      tags:
      - authority
      description: Get Authority
      operationId: AuthorityController.Get Authority List
      responses:
        "200":
          schema:
            $ref: '#/definitions/.AuthorityList'
        "404":
          description: None
        "405":
          description: Not Allowed
    post:
      tags:
      - authority
      description: Add Authority,if full and rw are false, then authority is readonly
      operationId: AuthorityController.Add Authority
      parameters:
      - in: body
        name: post_body
        description: '{name:''your name '',full: false, rw:false}'
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Authority'
        "404":
          description: body is empty
    patch:
      tags:
      - authority
      description: Update Authority,if full and rw are false, then authority is readonly
      operationId: AuthorityController.Update Authority
      parameters:
      - in: body
        name: patch_body
        description: '{name:''your name '',full: false, rw:false}'
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Authority'
        "404":
          description: body is empty
  /authority/{name}:
    get:
      tags:
      - authority
      description: Get Authority
      operationId: AuthorityController.Get Authority
      parameters:
      - in: path
        name: name
        description: authority name
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Authority'
        "404":
          description: body is empty
    delete:
      tags:
      - authority
      description: Delete Authority
      operationId: AuthorityController.Delete Authority
      parameters:
      - in: path
        name: name
        description: authority name
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.Authority'
        "404":
          description: body is empty
  /user/:
    get:
      tags:
      - user
      description: Get User
      operationId: UserController.Get User List
      responses:
        "200":
          schema:
            $ref: '#/definitions/.UserList'
        "404":
          description: None
        "405":
          description: Not Allowed
    post:
      tags:
      - user
      description: Add User,name password authority_id is required
      operationId: UserController.Add User
      parameters:
      - in: body
        name: post_body
        description: '{name:''your name '',password: ''password'', authority_id:''id'',tel:''12345678901'',
          email:''xx@ff.com''}'
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.User'
        "404":
          description: body is empty
    patch:
      tags:
      - user
      description: Update User,User,name password authority_id is required
      operationId: UserController.Update User
      parameters:
      - in: body
        name: patch_body
        description: '{name:''your name '',password: ''password'', authority_id:id,tel:12345678901,
          email:''xx@ff.com''}'
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.User'
        "404":
          description: body is empty
  /user/{name}:
    get:
      tags:
      - user
      description: Get User
      operationId: UserController.Get User
      parameters:
      - in: path
        name: name
        description: User name
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.User'
        "404":
          description: body is empty
    delete:
      tags:
      - user
      description: Delete User
      operationId: UserController.Delete User
      parameters:
      - in: path
        name: name
        description: User name
        required: true
        type: string
      responses:
        "200":
          schema:
            $ref: '#/definitions/models.User'
        "404":
          description: body is empty
definitions:
  .AuthorityList:
    type: object
  .UserList:
    type: object
  models.Authority:
    title: Authority
    type: object
    properties:
      Id:
        type: integer
        format: int64
      full:
        type: boolean
      name:
        type: string
      rw:
        type: boolean
  models.User:
    title: User
    type: object
    properties:
      Id:
        type: integer
        format: int64
      authority_id:
        $ref: '#/definitions/models.Authority'
      email:
        type: string
      name:
        type: string
      password:
        type: string
      tel:
        type: integer
        format: int64
